name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Testes (PHPUnit)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP 8.2
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql, pdo_sqlite, bcmath, curl
          tools: composer
          coverage: none

      - name: Instalar dependencias do Composer (com dev)
        run: |
          composer install --no-interaction --prefer-dist --ansi

      - name: Preparar ambiente de teste
        run: |
          cp .env.example .env
          php artisan key:generate --ansi
          php artisan config:clear --ansi
          php artisan view:clear --ansi
          php artisan route:clear --ansi

      - name: Executar testes
        run: |
          composer test

  deploy:
    name: Deploy para Hostinger
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP 8.2 (producao)
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql, pdo_sqlite, bcmath, curl
          tools: composer

      - name: Instalar dependencias do Composer (sem dev)
        run: |
          composer install --no-interaction --no-dev --prefer-dist --optimize-autoloader --ansi

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Instalar dependencias NPM e build
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
          npm run build

      - name: Montar pacote de deploy
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p deploy_package
          rsync -a \
            --delete \
            --exclude ".git" \
            --exclude ".github" \
            --exclude "node_modules" \
            --exclude "tests" \
            --exclude "storage/logs/*.log" \
            ./ deploy_package/

      - name: Adicionar chave SSH
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          printf "%s\n" "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -H "${{ secrets.HOSTINGER_HOST }}" >> ~/.ssh/known_hosts

      - name: Enviar arquivos para Hostinger (rsync)
        shell: bash
        run: |
          set -euo pipefail
          rsync -az \
            -e "ssh -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519" \
            --delete \
            deploy_package/ \
            "${{ secrets.HOSTINGER_USER }}@${{ secrets.HOSTINGER_HOST }}:${{ secrets.HOSTINGER_APP_PATH }}/"

      - name: Executar comandos de pos-deploy no servidor
        shell: bash
        run: |
          set -euo pipefail
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 -p "${{ secrets.SSH_PORT }}" "${{ secrets.HOSTINGER_USER }}@${{ secrets.HOSTINGER_HOST }}" "bash -se -c '
            APP_PATH=\"${{ secrets.HOSTINGER_APP_PATH }}\"
            WEBROOT=\"${{ secrets.HOSTINGER_WEBROOT }}\"

            cd \"$APP_PATH\"

            echo \"Limpando caches antigos...\"
            php artisan optimize:clear

            echo \"Rodando migrations (forcado em producao)...\"
            php artisan migrate --force

            echo \"Recriando caches...\"
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            echo \"Permissoes e storage...\"
            chmod -R 775 storage bootstrap/cache || true
            rm -rf \"$WEBROOT/storage\" || true
            ln -s \"$APP_PATH/storage/app/public\" \"$WEBROOT/storage\" || true

            echo \"Atualizando webroot (index.php e .htaccess)...\"
            cp -f \"$APP_PATH/deploy/webroot/index.php\" \"$WEBROOT/index.php\"
            cp -f \"$APP_PATH/deploy/webroot/.htaccess\" \"$WEBROOT/.htaccess\"

            echo \"Health-check...\"
            (curl -sSf -I https://curriculogamer.com.br >/dev/null && echo OK) || {
              echo \"Falha no health-check. Ultimas linhas do log:\"
              tail -n 200 storage/logs/laravel.log || true
              exit 1
            }

            echo \"Deploy concluido com sucesso!\"
          '
          "
